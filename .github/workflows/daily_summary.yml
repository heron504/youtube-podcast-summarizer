name: Daily YouTube Podcast Summary

on:
  schedule:
    # 每天北京时间上午8点 (UTC 00:00)
    - cron: '0 0 * * *'
  workflow_dispatch: # 允许手动触发

env:
  TZ: Asia/Shanghai

jobs:
  generate_summary:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create credentials directory
      run: mkdir -p config

    - name: Create environment file
      run: |
        cat > config/.env << EOF
        # YouTube API配置 (可选)
        YOUTUBE_API_KEY=${{ secrets.YOUTUBE_API_KEY }}
        YOUTUBE_CREDENTIALS_FILE=credentials.json

        # OpenRouter API配置
        OPENROUTER_API_KEY=${{ secrets.OPENROUTER_API_KEY }}
        OPENROUTER_MODEL=anthropic/claude-3.5-sonnet

        # QQ邮箱配置
        EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }}
        EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}
        EMAIL_TO=${{ secrets.EMAIL_TO }}
        EMAIL_SMTP_SERVER=smtp.qq.com
        EMAIL_SMTP_PORT=587

        # 可选配置
        DEBUG=False
        EOF

    - name: Create YouTube credentials file
      if: ${{ secrets.YOUTUBE_CREDENTIALS_JSON }}
      run: |
        echo '${{ secrets.YOUTUBE_CREDENTIALS_JSON }}' > credentials.json

    - name: Create settings file
      run: |
        cat > config/settings.json << EOF
        {
          "max_videos_per_channel": 2,
          "max_channels_to_process": 15,
          "days_back_to_fetch": 1,
          "schedule_time": "08:00",
          "pdf_output_dir": "reports",
          "log_level": "INFO"
        }
        EOF

    - name: Create reports directory
      run: mkdir -p reports

    - name: Run daily summary
      run: |
        cd ${{ github.workspace }}
        python src/main.py --once

    - name: Archive PDF reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: daily-podcast-summary
        path: reports/*.pdf
        retention-days: 30

    - name: Archive logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: system-logs
        path: logs/*.log
        retention-days: 7